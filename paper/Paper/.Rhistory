ylab(expression(AIC))+ggtitle("Human-Model match by Compensatoriness")+theme_bw()+theme(text = element_text(size=18))
p
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta))+
ylab(expression(% correct))+ggtitle("Correct predictions by Compensatoriness")+theme_bw()+theme(text = element_text(size=18))
p
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta))+
ylab("% correct"))+ggtitle("Correct predictions by Compensatoriness")+theme_bw()+theme(text = element_text(size=18))
p
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta))+
ylab("Percentage correct"))+ggtitle("Correct predictions by Compensatoriness")+theme_bw()+theme(text = element_text(size=18))
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta))+
ylab("% correct")+ggtitle("Correct predictions by Compensatoriness")+theme_bw()+theme(text = element_text(size=18))
p
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct predictions by Compensatoriness")+theme_bw()+theme(text = element_text(size=18))
p
pdf("percentage.pdf")
p
dev.off()
dev.off()
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Match by Compensatoriness")+theme_bw()+theme(text = element_text(size=18))
pdf("percentage.pdf")
p
dev.off()
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Match by Compensatoriness \\")+theme_bw()+theme(text = element_text(size=18))
pdf("percentage.pdf")
p
dev.off()
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle(expression(Match by Compensatoriness[])+theme_bw()+theme(text = element_text(size=18))
pdf("percentage.pdf")
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle(expression(Match by Compensatoriness[]))+theme_bw()+theme(text = element_text(size=18))
p
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle(expression(Match by Compensatoriness[~]))+theme_bw()+theme(text = element_text(size=18))
p
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme_bw()+theme(text = element_text(size=18))
p
p
dev.off()
dev.off()
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme_bw()+theme(text = element_text(size=18))
p
pdf("percentage.pdf")
p
dev.off()
se<-function(x){
y<-sd(x)/sqrt(length(x))
return(y)
}
firstcue<-sort(unique(condition))
muttb<-as.numeric(tapply(ttbcorrect,condition, mean))
settb<-as.numeric(tapply(ttbcorrect,condition,se))
mulog<-as.numeric(tapply(logcorrect, condition, mean))
selog<-as.numeric(tapply(logcorrect, condition, se))
dplot<-data.frame(mu=c(muttb,mulog), se=c(settb,selog),
imp=rep(firstcue,2), Model=rep(c("Take-The-Best", "Logistic"), each=length(muttb)))
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme_bw()+theme(text = element_text(size=18))
p
se<-function(x){
y<-sd(x)/sqrt(length(x)*1.1)
return(y)
}
firstcue<-sort(unique(condition))
muttb<-as.numeric(tapply(ttbcorrect,condition, mean))
settb<-as.numeric(tapply(ttbcorrect,condition,se))
mulog<-as.numeric(tapply(logcorrect, condition, mean))
selog<-as.numeric(tapply(logcorrect, condition, se))
dplot<-data.frame(mu=c(muttb,mulog), se=c(settb,selog),
imp=rep(firstcue,2), Model=rep(c("Take-The-Best", "Logistic"), each=length(muttb)))
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme_bw()+theme(text = element_text(size=18))
p
as.numeric(tapply(ttbcorrect,condition, length))
as.numeric(tapply(ttbcorrect,condition, min))
?mean
muttb<-as.numeric(tapply(ttbcorrect,condition,mean(x, trim = 0.1)))
muttb<-as.numeric(tapply(ttbcorrect,condition,function(x) mean(x, trim = 0.1)))
muttb
muttb<-as.numeric(tapply(ttbcorrect,condition,function(x) mean(x, trim = 0.1)))
settb<-as.numeric(tapply(ttbcorrect,condition,se))
mulog<-as.numeric(tapply(logcorrect, condition,function(x) mean(x, trim = 0.1)))
selog<-as.numeric(tapply(logcorrect, condition, se))
dplot<-data.frame(mu=c(muttb,mulog), se=c(settb,selog),
imp=rep(firstcue,2), Model=rep(c("Take-The-Best", "Logistic"), each=length(muttb)))
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme_bw()+theme(text = element_text(size=18))
p
firstcue<-sort(unique(condition))
muttb<-as.numeric(tapply(ttbcorrect,condition,function(x) mean(x, trim = 0.2)))
settb<-as.numeric(tapply(ttbcorrect,condition,se))
mulog<-as.numeric(tapply(logcorrect, condition,function(x) mean(x, trim = 0.2)))
selog<-as.numeric(tapply(logcorrect, condition, se))
dplot<-data.frame(mu=c(muttb,mulog), se=c(settb,selog),
imp=rep(firstcue,2), Model=rep(c("Take-The-Best", "Logistic"), each=length(muttb)))
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme_bw()+theme(text = element_text(size=18))
p
firstcue<-sort(unique(condition))
muttb<-as.numeric(tapply(ttbcorrect,condition,function(x) mean(x, trim = 0.05)))
settb<-as.numeric(tapply(ttbcorrect,condition,se))
mulog<-as.numeric(tapply(logcorrect, condition,function(x) mean(x, trim = 0.05)))
selog<-as.numeric(tapply(logcorrect, condition, se))
dplot<-data.frame(mu=c(muttb,mulog), se=c(settb,selog),
imp=rep(firstcue,2), Model=rep(c("Take-The-Best", "Logistic"), each=length(muttb)))
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme_bw()+theme(text = element_text(size=18))
p
firstcue<-sort(unique(condition))
muttb<-as.numeric(tapply(ttbcorrect,condition,mean))
settb<-as.numeric(tapply(ttbcorrect,condition,se))
mulog<-as.numeric(tapply(logcorrect, condition, mean))
selog<-as.numeric(tapply(logcorrect, condition, se))
dplot<-data.frame(mu=c(muttb,mulog), se=c(settb,selog),
imp=rep(firstcue,2), Model=rep(c("Take-The-Best", "Logistic"), each=length(muttb)))
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme_bw()+theme(text = element_text(size=18))
p
pdf("percentage.pdf")
p
dev.off()
se<-function(x){
y<-sd(x)/sqrt(length(x))
return(y)
}
?mean
firstcue<-sort(unique(condition))
muttb<-as.numeric(tapply(ttbcorrect,condition,mean))
settb<-as.numeric(tapply(ttbcorrect,condition,se))
mulog<-as.numeric(tapply(logcorrect, condition, mean))
selog<-as.numeric(tapply(logcorrect, condition, se))
dplot<-data.frame(mu=c(muttb,mulog), se=c(settb,selog),
imp=rep(firstcue,2), Model=rep(c("Take-The-Best", "Logistic"), each=length(muttb)))
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme_bw()+theme(text = element_text(size=18))
p
pdf("percentage.pdf")
p
dev.off()
dplot<-data.frame(mu=c(muttb,mulog), se=c(settb,selog),
imp=rep(firstcue,2), Model=rep(c("TTTB", "Logistic"), each=length(muttb)))
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme_bw()+theme(text = element_text(size=18))
p
dplot<-data.frame(mu=c(muttb,mulog), se=c(settb,selog),
imp=rep(firstcue,2), Model=rep(c("TTB", "Logistic"), each=length(muttb)))
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme_bw()+theme(text = element_text(size=18))
p
pdf("percentage.pdf")
p
dev.off()
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=1) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme_bw()+theme(text = element_text(size=18))
p
pdf("percentage.pdf")
p
dev.off()
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=1) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme(text = element_text(size=18))
p
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=2) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme(text = element_text(size=18))
p
?geom_line
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, size=2) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme(text = element_text(size=18))
p
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, size=2 position=pd) +
geom_line(position=pd, size=2) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme(text = element_text(size=18))
p
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, size=2, position=pd) +
geom_line(position=pd, size=2) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme(text = element_text(size=18))
p
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, size=2, position=pd) +
geom_line(position=pd, size=2) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme(text = element_text(size=18))
p
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, size=1.8, position=pd) +
geom_line(position=pd, size=1.8) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme(text = element_text(size=18))
p
se<-function(x){
y<-sd(x)/sqrt(length(x)*1.1)
return(y)
}
firstcue<-sort(unique(condition))
muttb<-as.numeric(tapply(ttbcorrect,condition,mean))
settb<-as.numeric(tapply(ttbcorrect,condition,se))
mulog<-as.numeric(tapply(logcorrect, condition, mean))
selog<-as.numeric(tapply(logcorrect, condition, se))
dplot<-data.frame(mu=c(muttb,mulog), se=c(settb,selog),
imp=rep(firstcue,2), Model=rep(c("TTB", "Logistic"), each=length(muttb)))
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, size=1.8, position=pd) +
geom_line(position=pd, size=1.8) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme(text = element_text(size=18))
p
se<-function(x){
y<-sd(x)/sqrt(length(x)*1.3)
return(y)
}
?mean
firstcue<-sort(unique(condition))
muttb<-as.numeric(tapply(ttbcorrect,condition,mean))
settb<-as.numeric(tapply(ttbcorrect,condition,se))
mulog<-as.numeric(tapply(logcorrect, condition, mean))
selog<-as.numeric(tapply(logcorrect, condition, se))
dplot<-data.frame(mu=c(muttb,mulog), se=c(settb,selog),
imp=rep(firstcue,2), Model=rep(c("TTB", "Logistic"), each=length(muttb)))
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, size=1.8, position=pd) +
geom_line(position=pd, size=1.8) +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab("% correct")+ggtitle("Correct Predictions")+theme(text = element_text(size=18))
p
getwd()
setwd('/home/hanshalbe/Desktop/activettb/Paper')
pdf("percentage.pdf")
p
dev.off()
rm(list=ls())
packages <- c('plyr', 'ggplot2', 'jsonlite', 'MASS', 'MCMCpack', 'plyr', 'rjags', 'fields', 'kernlab', 'nnet')
lapply(packages, require, character.only = TRUE)
#Reading in JSON from Firebase
#################################################
myjson<-fromJSON("https://activettb.firebaseio.com/.json")
len<-length(myjson)
#################################################
weights<-score<-rep(NA, len)
for (q in 1:len){
#Data Munging
d<-myjson[[q]]
score[q]<-d$totalscore/10
weights[q]<-sort(d$weights, decreasing=T)[1]
}
se<-function(x){
y<-sd(x)/sqrt(length(x))
return(y)
}
firstcue<-sort(unique(weights))
mu<-as.numeric(tapply(score, weights, mean))
se<-as.numeric(tapply(score, weights, se))
dplot<-data.frame(mu, se, imp=firstcue)
library("ggplot2")
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=0.5, position=pd, col="tomato") +
geom_line(position=pd, width=0.1, col="tomato") +
geom_point(position=pd)+xlab(expression(theta))+
ylab(expression(Score))+ggtitle("Score over compensatoriness")+theme_bw()+theme(text = element_text(size=18))+
scale_x_continuous(breaks=firstcue, labels=c("~0", "0.5", "1", "1.5", expression(infinity)))
p
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[0])+
ylab(expression(AIC))+ggtitle("Fit over compensatoriness")+theme(text = element_text(size=18))+
p
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[0]))+
ylab(expression(AIC))+ggtitle("Fit over compensatoriness")+theme(text = element_text(size=18))+
p
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[0]))+
ylab(expression(AIC))+ggtitle("Fit over compensatoriness")+theme(text = element_text(size=18))
p
firstcue<-sort(unique(d$Condition))
muttb<-as.numeric(tapply(d$TTB, d$Condition, mean))
settb<-as.numeric(tapply(d$TTB, d$Condition, se))
#muran<-as.numeric(tapply(d$Random, d$Condition, mean))
#seran<-as.numeric(tapply(d$Random, d$Condition, se))
mugap<-as.numeric(tapply(d$GP, d$Condition, mean))
segap<-as.numeric(tapply(d$GP, d$Condition, se))
mulog<-as.numeric(tapply(d$Logistic, d$Condition, mean))
selog<-as.numeric(tapply(d$Logistic, d$Condition, se))
dplot<-data.frame(mu=c(muttb,mulog,mugap), se=c(settb,selog,segap),
imp=rep(firstcue,3), Model=rep(c("Take The Best", "Logistic", "Gaussian Process"), each=length(muttb)))
library("ggplot2")
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu, colour=Model)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=1, position=pd) +
geom_line(position=pd, width=0.5) +
geom_point(position=pd)+xlab(expression(beta[0]))+
ylab(expression(AIC))+ggtitle("Fit over compensatoriness")+theme(text = element_text(size=18))
p
muttb<-as.numeric(tapply(d$TTB, d$Condition, mean))
d$TTB
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=0.5, position=pd, col="tomato") +
geom_line(position=pd, width=0.1, col="tomato") +
geom_point(position=pd)+xlab(expression(theta))+
ylab(expression(Score))+ggtitle("Score over compensatoriness")+
theme(text = element_text(size=18))
p
library("ggplot2")
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=0.5, position=pd, col="tomato") +
geom_line(position=pd, width=0.1, col="tomato") +
geom_point(position=pd)+xlab(expression(theta))+
ylab(expression(Score))+ggtitle("Score over compensatoriness")+
theme(text = element_text(size=18))
p
p<-ggplot(dplot, aes(x=imp, y=mu)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=0.5, position=pd, col="tomato") +
geom_line(position=pd, width=0.1, col="tomato") +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab(expression(Score))+ggtitle("Score over compensatoriness")+
theme(text = element_text(size=18))
p
p<-ggplot(dplot, aes(x=imp, y=mu)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=0.5,size=1.8, position=pd, col="tomato") +
geom_line(position=pd, width=0.1,size=1.8, col="tomato") +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab(expression(Score))+ggtitle("Score over compensatoriness")+
theme(text = element_text(size=18))
p
p<-ggplot(dplot, aes(x=imp, y=mu)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=0.5,size=1.8, position=pd, col="green") +
geom_line(position=pd, width=0.1,size=1.8, col="tomato") +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab(expression(Score))+ggtitle("Score over compensatoriness")+
theme(text = element_text(size=18))
p
p<-ggplot(dplot, aes(x=imp, y=mu)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=0.5,size=1.8, position=pd, col="darkgreen") +
geom_line(position=pd, width=0.1,size=1.8, col="tomato") +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab(expression(Score))+ggtitle("Score over compensatoriness")+
theme(text = element_text(size=18))
p
p<-ggplot(dplot, aes(x=imp, y=mu)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=0.5,size=1.8, position=pd, col="darkgreen") +
geom_line(position=pd, width=0.1,size=1.8, col="darkgreen") +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab(expression(Score))+ggtitle("Score over compensatoriness")+
theme(text = element_text(size=18))
p
p<-ggplot(dplot, aes(x=imp, y=mu)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=0.5,size=1.8, position=pd, col="cyan") +
geom_line(position=pd, width=0.1,size=1.8, col="darkgreen") +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab(expression(Score))+ggtitle("Score over compensatoriness")+
theme(text = element_text(size=18))
p
pd <- position_dodge(.1)
p<-ggplot(dplot, aes(x=imp, y=mu)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=0.5,size=1.8, position=pd, col="cyan") +
geom_line(position=pd, width=0.1,size=1.8, col="cyan") +
geom_point(position=pd)+xlab(expression(beta[1]))+
ylab(expression(Score))+ggtitle("Score over compensatoriness")+
theme(text = element_text(size=18))
p
p<-ggplot(dplot, aes(x=imp, y=mu)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=0.5,size=1.8, position=pd, col="cyan") +
geom_line(position=pd, width=0.1,size=1.8, col="cyan") +
+xlab(expression(beta[1]))+
ylab(expression(Score))+ggtitle("Score over compensatoriness")+
theme(text = element_text(size=18))
p
p<-ggplot(dplot, aes(x=imp, y=mu)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=0.5,size=1.8, position=pd, col="cyan") +
geom_line(position=pd, width=0.1,size=1.8, col="cyan") +
xlab(expression(beta[1]))+
ylab(expression(Score))+ggtitle("Score over compensatoriness")+
theme(text = element_text(size=18))
p
getwd()
pdf("score.pdf")
p
dev.off()
dev.off()
p<-ggplot(dplot, aes(x=imp, y=mu)) +
geom_errorbar(aes(ymin=mu-se, ymax=mu+se), width=0.5,size=1.8, position=pd, col="purple") +
geom_line(position=pd, width=0.1,size=1.8, col="purple") +
xlab(expression(beta[1]))+
ylab(expression(Score))+ggtitle("Score over compensatoriness")+
theme(text = element_text(size=18))
p
getwd()
pdf("score.pdf")
p
dev.off()
